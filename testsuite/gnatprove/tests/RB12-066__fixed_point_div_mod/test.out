types.ads:6:12: info: division check proved (CVC4: 1 VC)
types.ads:6:12: info: overflow check proved (CVC4: 1 VC)
types.ads:6:12: info: range check proved (CVC4: 1 VC)
types.ads:10:12: high: range check might fail (e.g. when X = 2 and Y = 1/128) [the code does not conform to the check, or some loop invariant or post condition is too weak] [reason for check: result of division must be convertible to the target type of the conversion] [possible fix: add precondition (X / Y in M) to subprogram at line 9]
types.ads:10:12: info: division check proved (CVC4: 1 VC)
types.ads:10:12: info: overflow check proved (CVC4: 1 VC)
types.ads:10:12: info: range check proved (CVC4: 1 VC)
types.ads:16:13: high: range check might fail, cannot prove upper bound for X / Y (e.g. when X = 101/128 and Y = 1/128) [the code does not conform to the check, or some loop invariant or post condition is too weak] [reason for check: result of division must be convertible to the target type of the conversion] [possible fix: add precondition (X / Y in M2) to subprogram at line 15]
types.ads:16:13: info: division check proved (CVC4: 1 VC)
types.ads:16:13: info: overflow check proved (CVC4: 1 VC)
types.ads:16:13: info: range check proved (CVC4: 2 VC)
types.ads:22:13: high: range check might fail, cannot prove upper bound for X / Y (e.g. when X = 100/128 and Y = 1/128) [the code does not conform to the check, or some loop invariant or post condition is too weak] [reason for check: result of division must be convertible to the target type of the conversion] [possible fix: add precondition (X / Y in M3) to subprogram at line 21]
types.ads:22:13: info: division check proved (CVC4: 1 VC)
types.ads:22:13: info: overflow check proved (CVC4: 2 VC)
types.ads:22:13: info: range check proved (CVC4: 2 VC)
