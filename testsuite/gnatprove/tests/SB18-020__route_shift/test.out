a-cofuve.ads:96:06: info: data dependencies proved, in instantiation at test_route.adb:38
a-cofuve.ads:232:54: medium: overflow check might fail, cannot prove lower bound for Index_Type'Pos (Index_Type'Base'First) - Offset, in instantiation at test_route.adb:38 [reason for check: result of subtraction must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit Ada.Numerics.Big_Numerics.Big_Integers]
a-cofuve.ads:237:63: medium: range check might fail, cannot prove lower bound for Index_Type'Pos, in instantiation at test_route.adb:38 [possible fix: add precondition (Index_Type'Pos in -2147483648 .. 2147483647) to subprogram at line 217]
a-cofuve.ads:238:59: medium: overflow check might fail, cannot prove lower bound for (Index_Type'Pos (Index_Type'First) - 1) + Length (Right), in instantiation at test_route.adb:38 [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit Ada.Numerics.Big_Numerics.Big_Integers]
a-cofuve.ads:238:76: medium: overflow check might fail, cannot prove lower bound for (Index_Type'Pos (Index_Type'First) - 1) + Length (Right) - Index_Type'pos, in instantiation at test_route.adb:38 [reason for check: result of subtraction must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit Ada.Numerics.Big_Numerics.Big_Integers]
a-cofuve.ads:239:30: medium: range check might fail, cannot prove lower bound for Index_Type'Pos, in instantiation at test_route.adb:38 [possible fix: add precondition (Index_Type'Pos in -2147483648 .. 2147483647) to subprogram at line 217]
a-cofuve.ads:300:52: medium: overflow check might fail, in instantiation at test_route.adb:38 [reason for check: value must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit Ada.Numerics.Big_Numerics.Big_Integers]
test_route.adb:11:30: medium: pointer dereference check might fail
test_route.adb:11:49: medium: overflow check might fail, cannot prove lower bound for Integer'Last - S [reason for check: result of subtraction must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit Ada.Numerics.Big_Numerics.Big_Integers]
test_route.adb:12:21: medium: pointer dereference check might fail
test_route.adb:12:41: medium: overflow check might fail, cannot prove lower bound for Integer'First - S [reason for check: result of subtraction must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit Ada.Numerics.Big_Numerics.Big_Integers]
test_route.adb:13:14: medium: postcondition might fail, cannot prove P.X = P.X'Old + S
test_route.adb:13:15: medium: pointer dereference check might fail
test_route.adb:13:21: medium: pointer dereference check might fail
test_route.adb:13:28: medium: overflow check might fail, cannot prove lower bound for P.X'Old + S [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit Ada.Numerics.Big_Numerics.Big_Integers]
test_route.adb:14:11: medium: pointer dereference check might fail
test_route.adb:14:17: medium: pointer dereference check might fail
test_route.adb:17:08: medium: pointer dereference check might fail
test_route.adb:17:15: medium: pointer dereference check might fail
test_route.adb:17:18: medium: overflow check might fail, cannot prove lower bound for P.X + S [reason for check: result of addition must fit in a 32-bits machine integer]
test_route.adb:28:13: info: implicit function contract might not be available on recursive calls
test_route.adb:29:07: medium: "Length" is recursive, terminating annotation could be incorrect
test_route.adb:30:52: medium: pointer dereference check might fail [possible fix: subprogram at line 28 should mention R in a precondition]
test_route.adb:30:60: medium: overflow check might fail [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: add precondition (Integer'Min <= Integer'Last - 1) to subprogram at line 28]
test_route.adb:33:13: info: implicit function contract might not be available on recursive calls
test_route.adb:34:07: medium: "Nth_X" is recursive, terminating annotation could be incorrect
test_route.adb:34:22: medium: pointer dereference check might fail
test_route.adb:34:30: medium: pointer dereference check might fail
test_route.adb:34:38: medium: precondition might fail
test_route.adb:34:46: medium: pointer dereference check might fail
test_route.adb:34:55: medium: range check might fail, cannot prove lower bound for N - 1 [reason for check: input value must fit in parameter type] [possible fix: add precondition (N >= Positive'First + 1) to subprogram at line 33]
test_route.adb:44:14: medium: postcondition might fail, cannot prove Last (All_X'Result) = Length (R)
test_route.adb:46:15: medium: precondition might fail
test_route.adb:46:39: medium: precondition might fail
test_route.adb:49:14: info: initialization of "A" proved
test_route.adb:51:36: medium: loop invariant might fail in first iteration
test_route.adb:51:36: medium: loop invariant might not be preserved by an arbitrary iteration
test_route.adb:53:43: medium: loop invariant might fail in first iteration, cannot prove Get (A, I) = Nth_X (R, I)
test_route.adb:53:43: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove Get (A, I) = Nth_X (R, I)
test_route.adb:53:43: medium: precondition might fail
test_route.adb:53:56: medium: precondition might fail [possible fix: subprogram at line 43 should mention R in a precondition]
test_route.adb:54:18: medium: precondition might fail, cannot prove Length (Container) < Count_Type'last
test_route.adb:54:26: medium: precondition might fail [possible fix: subprogram at line 43 should mention R in a precondition]
test_route.adb:60:07: info: dynamic accessibility check proved (Trivial)
test_route.adb:64:07: info: dynamic accessibility check proved (Trivial)
test_route.adb:72:09: medium: postcondition might fail, cannot prove Length (At_End_Borrow (R)) = Length (R)
test_route.adb:73:13: medium: precondition might fail
test_route.adb:73:76: medium: pointer dereference check might fail
test_route.adb:75:32: medium: precondition might fail
test_route.adb:75:63: medium: precondition might fail
test_route.adb:80:18: medium: null exclusion check might fail
test_route.adb:80:18: medium: pointer dereference check might fail
test_route.adb:82:17: info: function contract not available for proof ("Nth_Point" might not return)
test_route.adb:82:17: medium: precondition might fail
test_route.adb:82:29: medium: pointer dereference check might fail
test_route.adb:82:38: medium: range check might fail, cannot prove lower bound for N - 1 [reason for check: input value must fit in parameter type] [possible fix: add precondition (N >= Positive'First + 1) to subprogram at line 68]
test_route.adb:88:30: medium: precondition might fail
test_route.adb:88:59: medium: overflow check might fail, cannot prove lower bound for Integer'Last - S [reason for check: result of subtraction must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit Ada.Numerics.Big_Numerics.Big_Integers]
test_route.adb:89:21: medium: precondition might fail
test_route.adb:89:51: medium: overflow check might fail, cannot prove lower bound for Integer'First - S [reason for check: result of subtraction must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit Ada.Numerics.Big_Numerics.Big_Integers]
test_route.adb:90:14: medium: postcondition might fail, cannot prove Length (R) = Length (R)'old
test_route.adb:91:15: medium: precondition might fail
test_route.adb:91:30: medium: precondition might fail [possible explanation: enclosing 'Old attribute reference is unconditionally evaluated on subprogram entry]
test_route.adb:91:47: medium: overflow check might fail [reason for check: result of addition must fit in a 32-bits machine integer] [possible fix: use pragma Overflow_Mode or switch -gnato13 or unit Ada.Numerics.Big_Numerics.Big_Integers]
test_route.adb:93:31: medium: precondition might fail
test_route.adb:93:46: medium: precondition might fail
test_route.adb:95:27: info: function contract not available for proof ("Nth_Point" might not return)
test_route.adb:95:27: medium: precondition might fail
test_route.adb:97:07: medium: precondition might fail, cannot prove P.X <= Integer'Last - S
test_route.adb:97:16: medium: null exclusion check might fail
